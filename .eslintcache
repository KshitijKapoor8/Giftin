[{"D:\\VSCode\\NCHacks\\Giftin\\src\\index.js":"1","D:\\VSCode\\NCHacks\\Giftin\\src\\reportWebVitals.js":"2","D:\\VSCode\\NCHacks\\Giftin\\src\\App.js":"3","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\signup.js":"4","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\search.js":"5","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\login.js":"6","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\home.js":"7","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\wishlist.js":"8","D:\\VSCode\\NCHacks\\Giftin\\src\\components\\navbar.js":"9","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\scrape.js":"10"},{"size":665,"mtime":1609199731408,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1609180283889,"results":"13","hashOfConfig":"12"},{"size":755,"mtime":1609225313078,"results":"14","hashOfConfig":"12"},{"size":5200,"mtime":1609213749051,"results":"15","hashOfConfig":"12"},{"size":2486,"mtime":1609215447064,"results":"16","hashOfConfig":"12"},{"size":3123,"mtime":1609213390914,"results":"17","hashOfConfig":"12"},{"size":706,"mtime":1609266472386,"results":"18","hashOfConfig":"12"},{"size":9747,"mtime":1609266472418,"results":"19","hashOfConfig":"12"},{"size":3941,"mtime":1609266472452,"results":"20","hashOfConfig":"12"},{"size":1411,"mtime":1609266472386,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xvxxwk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\VSCode\\NCHacks\\Giftin\\src\\index.js",[],["47","48"],"D:\\VSCode\\NCHacks\\Giftin\\src\\reportWebVitals.js",[],"D:\\VSCode\\NCHacks\\Giftin\\src\\App.js",[],"D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\signup.js",[],"D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\search.js",["49","50","51","52"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MDBInput, MDBContainer, MDBView } from \"mdbreact\";\r\nimport Navbar from \"../components/navbar\";\r\nimport homebg from \"../assets/loginbg.jpg\";\r\n\r\nlet parsedResponse = [];\r\nlet list = [];\r\nlet display = [];\r\nlet uniq = [];\r\n\r\nfunction Nav() {\r\n  return <Navbar renderContent={Search()} />;\r\n}\r\n\r\nconst Search = () => {\r\n  const [filtered, setFiltered] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/users/\", {})\r\n      .then((res) => {\r\n        parsedResponse = JSON.parse(JSON.stringify(res.data));\r\n        parsedResponse\r\n          .slice(0)\r\n          .reverse()\r\n          .map((parsedResponse) => {\r\n            list.push(parsedResponse.username);\r\n          });\r\n        setFiltered(list);\r\n      })\r\n      .catch((err) => {});\r\n  }, []);\r\n\r\n  const findUser = (e) => {\r\n    var name = e.target.id;\r\n    for (var i = 0; i < parsedResponse.length; i++) {\r\n      if (parsedResponse[i].username == name) {\r\n        console.log(parsedResponse[i]._id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    let currentList = [];\r\n\r\n    let newList = [];\r\n\r\n    if (e.target.value !== \"\") {\r\n      currentList = list;\r\n\r\n      newList = currentList.filter((item) => {\r\n        const lc = item;\r\n\r\n        const filter = e.target.value;\r\n\r\n        if (lc.startsWith(filter)) {\r\n          display.push(lc);\r\n          display.push(\" \");\r\n          uniq = [...new Set(display)];\r\n        }\r\n      });\r\n    } else {\r\n      newList = list;\r\n      display = [];\r\n      uniq = [];\r\n    }\r\n\r\n    setFiltered(newList);\r\n  };\r\n\r\n  return (\r\n    <MDBView src={homebg}>\r\n      <MDBContainer>\r\n        <div style={{ paddingTop: \"5rem\" }}>\r\n          <MDBInput\r\n            label=\"Search!\"\r\n            onChange={searchData}\r\n            size=\"lg\"\r\n            icon=\"search\"\r\n            style={{ color: \"white\" }}\r\n          />\r\n          <div>\r\n            {uniq.map((item) => {\r\n              return (\r\n                <ul\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"2rem\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={findUser}\r\n                  id={item}\r\n                >\r\n                  {item}\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </MDBContainer>\r\n    </MDBView>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\login.js",["53","54","55"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const setData = (e) => {\r\n    e.preventDefault();\r\n    const user = { email: email, password: password };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/users/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"userToken\", res.data);\r\n        window.location = \"/\";\r\n      })\r\n      .catch((err) => {\r\n        setError(\"There was an error with your email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"4rem\" }}>\r\n      <Form onSubmit={setData}>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={{ span: 4, offset: 4 }}>\r\n              <FaLock size={23} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <label style={{ fontSize: \"2rem\" }}> Login </label>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <Form.Group controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(text) => {\r\n                    setEmail(text.target.value);\r\n                    console.log(text.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <Form.Group controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(text) => {\r\n                    setPassword(text.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <small\r\n                style={{\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                {error}{\" \"}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <Form.Group id=\"formNoAccount\">\r\n                <a href=\"http://localhost:3000/signup\">\r\n                  Don't have an account?\r\n                </a>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm={{ span: 4, offset: 4 }}>\r\n              <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\home.js",["56","57","58","59","60","61","62","63","64","65"],"import React, { useState } from \"react\";\r\nimport homebg from \"../assets/homebg.jpg\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBContainer,\r\n  MDBMask,\r\n  MDBView,\r\n} from \"mdbreact\";\r\n\r\nimport Navbar from '../components/navbar';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nexport default function Home(props) {\r\n \r\n\r\n  return (\r\n    <Navbar renderContent = {renderContent()}/>\r\n  );\r\n}\r\n\r\nfunction renderContent()\r\n{\r\n    return(\r\n        <MDBView src={homebg} style = {{justifyContent: 'center',  alignItems: 'center', width: '100%', height: '100%'}}>\r\n            <MDBMask className=\"flex-center\" >\r\n              <p className=\"white-text\" style={{fontSize: 50, paddingRight: '35%', paddingBottom: '8%'}}>make gifting easy</p>\r\n            </MDBMask>\r\n        </MDBView>\r\n    );\r\n}\r\n\r\n\r\n\r\n","D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\wishlist.js",["66","67","68","69","70","71","72","73","74","75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/navbar\";\r\nimport { MDBView, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport presentBg from \"../assets/present.jpg\";\r\nimport axios from \"axios\";\r\nimport { getAmazonPrice, getAmazonTitle, getHTML } from \"./scrape\";\r\nlet parsedResponse = [];\r\nlet priceArray = [];\r\nlet titleArray = [];\r\nlet priceSet = [];\r\nlet titleSet = [];\r\nlet asin = [];\r\n\r\nexport default function Wishlist() {\r\n  if (localStorage.getItem(\"userToken\") === \"\") {\r\n    window.location = \"/\";\r\n  }\r\n  return <Navbar renderContent={RenderContent()} />;\r\n}\r\nfunction wait(ms) {\r\n  var start = new Date().getTime();\r\n  var end = start;\r\n  while (end < start + ms) {\r\n    end = new Date().getTime();\r\n  }\r\n}\r\n\r\nfunction RenderContent() {\r\n<<<<<<< HEAD\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadData, setLoadData] = useState(true);\r\n  const [stuff, setstuff] = useState(true);\r\n  let currentId = localStorage.getItem(\"userToken\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${currentId}`)\r\n      .then((res) => {\r\n        parsedResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n        setLoading(false);\r\n        amazon();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  function amazon() {\r\n    for (let i = 0; i < parsedResponse.length; i++) {\r\n      var regex = RegExp(\r\n        \"https://www.amazon.com/([\\\\w-]+/)?(dp|gp/product)/(\\\\w+/)?(\\\\w{10})\"\r\n      );\r\n      var t = parsedResponse[i].match(regex);\r\n      if (t) {\r\n        asin.push(t[4]);\r\n      }\r\n    }\r\n    if (asin.length === parsedResponse.length) {\r\n      console.log(getData(asin[1]));\r\n    }\r\n\r\n    function getData(asin) {\r\n      if (asin !== \"undefined\") {\r\n        console.log(asin);\r\n        const API = `https://api.rainforestapi.com/request?api_key=D1353B3B816F48CDBBE7DFA7639FD47B&type=product&amazon_domain=amazon.com&asin=${asin}`;\r\n        return new Promise((resolve, reject) => {\r\n          fetch(API, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application///json\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              response.json().then((data) => {\r\n                console.log(data);\r\n                if (data.request_info.success.toString() === \"false\") {\r\n                  console.log(\"hello\");\r\n                } else if (data.request_info.success.toString() === \"true\") {\r\n                  resolve(data);\r\n                  getData().then((data) => {\r\n                    if (data.request_info.success.toString() === \"false\") {\r\n                      console.log(\"hello again\");\r\n                    } else if (\r\n                      data.request_info.success.toString() === \"true\"\r\n                    ) {\r\n                      let value = data.product.buybox_winner.price.value.toString();\r\n                      console.log(value);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching response: \", error);\r\n            });\r\n        });\r\n      } else {\r\n        console.log(\"wait\");\r\n      }\r\n    }\r\n  }\r\n  // for (let i = 0; i < asin.length; i++) {\r\n  //   console.log(asin[i]);\r\n  //setstuff(false);\r\n  //console.log(getData(asin[1]));\r\n  // }\r\n\r\n  if (loading) return null;\r\n\r\n  return (\r\n    <MDBView\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"vertical\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      src={presentBg}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"7rem\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\" }}>\r\n            <strong>your</strong> wishlist\r\n          </h1>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <MDBTable borderless>\r\n            <MDBTableHead>\r\n              <tr style={{ color: \"white\" }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n\r\n            <MDBTableBody>\r\n              {parsedResponse.map((links, index) => {\r\n                if (setLoadData) return null;\r\n\r\n                return (\r\n                  <tr style={{ color: \"white\" }}>\r\n                    <th>{links}</th>\r\n                    <th>{priceSet[index]}</th>\r\n                    <th>price</th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </div>\r\n    </MDBView>\r\n  );\r\n=======\r\n    \r\n    const [loading, setLoading] = useState(true)\r\n    const [loadData, setLoadData] = useState(true);\r\n    const [currentPrice, setCurrentPrice] = useState(\"\");\r\n    let currentId = localStorage.getItem(\"userToken\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/users/${currentId}`)\r\n        .then((res) => {\r\n            parsedResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n            console.log(loading)\r\n            scrapePage();\r\n        })\r\n        .catch((err) => {console.log(err)})\r\n\r\n    }, [])\r\n\r\n    if(loading)\r\n        return null\r\n\r\n    async function scrapePage() {\r\n        if(loading)\r\n        {\r\n            console.log(parsedResponse)\r\n            // parsedResponse.map(async (x, i) => {\r\n\r\n\r\n            //     let html = await getHTML(x);\r\n            //     await getAmazonPrice(html).then((res) => {\r\n            //         priceArray.push(res)\r\n            //         console.log(res)\r\n            //         if(parsedResponse[parsedResponse.length-1] === x)\r\n            //             setLoading(false)\r\n\r\n            //     })\r\n                \r\n            //     await getAmazonTitle(html).then((res) => {\r\n            //         titleArray.push(res)\r\n            //     })\r\n            // })\r\n\r\n            for(let i = 0; i < parsedResponse.length; i++)\r\n            {\r\n                    let html = await getHTML(parsedResponse[i]);\r\n                await getAmazonPrice(html).then((res) => {\r\n                    priceArray.push(res)\r\n                })\r\n                \r\n                await getAmazonTitle(html).then((res) => {\r\n                    titleArray.push(res)\r\n                })\r\n\r\n                if(parsedResponse[parsedResponse.length-1] === parsedResponse[i])\r\n                        setLoading(false)\r\n        \r\n            }\r\n\r\n\r\n            console.log(priceArray)\r\n            priceSet = [...new Set(priceArray)];\r\n            titleSet = [...new Set(titleArray)];\r\n\r\n            priceArray = Array.from(priceSet);\r\n            titleArray = Array.from(titleSet)\r\n\r\n            \r\n        }\r\n      }\r\n        \r\n      \r\n    // for(let i = 0; i < parsedResponse.length; i++)\r\n    // {\r\n    //     let asin;\r\n    //     var regex = RegExp(\"https://www.amazon.com/([//w-]+/)?(dp%7Cgp/product)/(//w+/)?(//w%7B10%7D)%22\");\r\n\r\n    //     if (parsedResponse[i].match(regex)) { \r\n    //         asin = parsedResponse[i].match(regex)[4];\r\n    //     }\r\n    //     console.log(parsedResponse[i])\r\n    //     console.log(asin)\r\n        \r\n    // }\r\n    \r\n    return (\r\n        \r\n            <MDBView style = {{display: 'flex', flexDirection: 'vertical', justifyContent:'center'}}src = {presentBg}>\r\n\r\n                <div>\r\n                    <div style = {{flex: 1, display: 'flex', justifyContent: 'center', paddingTop: '7rem', height:'100%'}}>\r\n                        <h1 style = {{color: 'white'}}>\r\n                            <strong>your</strong> wishlist\r\n                        </h1>                        \r\n                    </div>\r\n\r\n                    <div style = {{flex: 1, display: 'flex', justifyContent: 'center', height:'100%'}}>\r\n                        <MDBTable borderless>\r\n                                <MDBTableHead>\r\n                                    <tr style = {{color: 'white'}}>\r\n                                        <th>#</th>\r\n                                        <th>title</th>\r\n                                        <th>price</th>\r\n                                    </tr>\r\n                                </MDBTableHead>\r\n\r\n                                <MDBTableBody>\r\n                                {\r\n\r\n                                    parsedResponse.map((links, index) => {\r\n\r\n                                        console.log(\"PRICES: \"+priceArray)\r\n                                        \r\n                                            return(\r\n                                                <tr style = {{color: 'white'}}>\r\n                                                    <th>{index+1}</th>\r\n                                                    <th>{titleArray[index]}</th>\r\n                                                    <th>{priceArray[index]}</th>\r\n                                                </tr>\r\n                                                \r\n                                            )\r\n                                        \r\n                                        \r\n                                    })\r\n\r\n                                    \r\n                                }\r\n                                </MDBTableBody>\r\n                                          \r\n                        </MDBTable>\r\n                    </div>  \r\n                </div>\r\n            </MDBView>\r\n    )\r\n>>>>>>> 447b79e8ea6035e712824fd9aa2d7edbd05b46dc\r\n}\r\n","D:\\VSCode\\NCHacks\\Giftin\\src\\components\\navbar.js",["77"],"D:\\VSCode\\NCHacks\\Giftin\\src\\pages\\scrape.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":17,"column":10,"nodeType":"84","messageId":"85","endLine":17,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":26,"column":33,"nodeType":"88","messageId":"89","endLine":26,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":37,"column":38,"nodeType":"92","messageId":"93","endLine":37,"endColumn":40},{"ruleId":"86","severity":1,"message":"94","line":51,"column":43,"nodeType":"88","messageId":"89","endLine":51,"endColumn":45},{"ruleId":"82","severity":1,"message":"95","line":4,"column":3,"nodeType":"84","messageId":"85","endLine":4,"endColumn":9},{"ruleId":"82","severity":1,"message":"96","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":14},{"ruleId":"82","severity":1,"message":"97","line":20,"column":11,"nodeType":"84","messageId":"85","endLine":20,"endColumn":15},{"ruleId":"82","severity":1,"message":"98","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"99","line":4,"column":3,"nodeType":"84","messageId":"85","endLine":4,"endColumn":12},{"ruleId":"82","severity":1,"message":"100","line":5,"column":3,"nodeType":"84","messageId":"85","endLine":5,"endColumn":17},{"ruleId":"82","severity":1,"message":"101","line":6,"column":3,"nodeType":"84","messageId":"85","endLine":6,"endColumn":15},{"ruleId":"82","severity":1,"message":"102","line":7,"column":3,"nodeType":"84","messageId":"85","endLine":7,"endColumn":19},{"ruleId":"82","severity":1,"message":"103","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":14},{"ruleId":"82","severity":1,"message":"104","line":9,"column":3,"nodeType":"84","messageId":"85","endLine":9,"endColumn":13},{"ruleId":"82","severity":1,"message":"105","line":10,"column":3,"nodeType":"84","messageId":"85","endLine":10,"endColumn":13},{"ruleId":"82","severity":1,"message":"106","line":11,"column":3,"nodeType":"84","messageId":"85","endLine":11,"endColumn":15},{"ruleId":"82","severity":1,"message":"107","line":17,"column":10,"nodeType":"84","messageId":"85","endLine":17,"endColumn":13},{"ruleId":"82","severity":1,"message":"108","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":24},{"ruleId":"82","severity":1,"message":"109","line":6,"column":26,"nodeType":"84","messageId":"85","endLine":6,"endColumn":40},{"ruleId":"82","severity":1,"message":"110","line":6,"column":42,"nodeType":"84","messageId":"85","endLine":6,"endColumn":49},{"ruleId":"82","severity":1,"message":"111","line":8,"column":5,"nodeType":"84","messageId":"85","endLine":8,"endColumn":15},{"ruleId":"82","severity":1,"message":"112","line":9,"column":5,"nodeType":"84","messageId":"85","endLine":9,"endColumn":15},{"ruleId":"82","severity":1,"message":"113","line":11,"column":5,"nodeType":"84","messageId":"85","endLine":11,"endColumn":13},{"ruleId":"82","severity":1,"message":"114","line":20,"column":10,"nodeType":"84","messageId":"85","endLine":20,"endColumn":14},{"ruleId":"82","severity":1,"message":"115","line":30,"column":10,"nodeType":"84","messageId":"85","endLine":30,"endColumn":18},{"ruleId":"82","severity":1,"message":"116","line":31,"column":10,"nodeType":"84","messageId":"85","endLine":31,"endColumn":15},{"ruleId":"82","severity":1,"message":"117","line":31,"column":17,"nodeType":"84","messageId":"85","endLine":31,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":45,"column":6,"nodeType":"120","endLine":45,"endColumn":8,"suggestions":"121"},{"ruleId":null,"fatal":true,"severity":2,"message":"122","line":3,"column":1},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'filtered' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a return value from arrow function.","'Button' is defined but never used.","'FormControl' is defined but never used.","'user' is assigned a value but never used.","'useState' is defined but never used.","'MDBNavbar' is defined but never used.","'MDBNavbarBrand' is defined but never used.","'MDBNavbarNav' is defined but never used.","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'MDBNavItem' is defined but never used.","'MDBNavLink' is defined but never used.","'MDBContainer' is defined but never used.","'Nav' is defined but never used.","'getAmazonPrice' is defined but never used.","'getAmazonTitle' is defined but never used.","'getHTML' is defined but never used.","'priceArray' is assigned a value but never used.","'titleArray' is assigned a value but never used.","'titleSet' is assigned a value but never used.","'wait' is defined but never used.","'loadData' is assigned a value but never used.","'stuff' is assigned a value but never used.","'setstuff' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentId'. Either include it or remove the dependency array.","ArrayExpression",["125"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 1 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m,\u001b[39m { useState } from \u001b[32m\"react\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m  \u001b[33mMDBNavbar\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  \u001b[33mMDBNavbarBrand\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  \u001b[33mMDBNavbarNav\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [currentId]",{"range":"128","text":"129"},[1314,1316],"[currentId]"]