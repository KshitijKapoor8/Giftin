[{"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\index.js":"1","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\App.js":"2","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\reportWebVitals.js":"3","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\home.js":"4","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\components\\navbar.js":"5","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\login.js":"6","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\signup.js":"7","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\wishlist.js":"8","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\search.js":"9","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\scrape.js":"10"},{"size":665,"mtime":1609201812595,"results":"11","hashOfConfig":"12"},{"size":755,"mtime":1609267153707,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1609179139903,"results":"14","hashOfConfig":"12"},{"size":706,"mtime":1609257714420,"results":"15","hashOfConfig":"12"},{"size":2190,"mtime":1609281259873,"results":"16","hashOfConfig":"12"},{"size":3755,"mtime":1609281260061,"results":"17","hashOfConfig":"12"},{"size":6006,"mtime":1609281259874,"results":"18","hashOfConfig":"12"},{"size":6761,"mtime":1609281260027,"results":"19","hashOfConfig":"12"},{"size":6108,"mtime":1609281260042,"results":"20","hashOfConfig":"12"},{"size":1465,"mtime":1609281259874,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1f287i2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\index.js",[],["47","48"],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\App.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\reportWebVitals.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\home.js",["49"],"import React, { useState } from \"react\";\r\nimport homebg from \"../assets/homebg.jpg\";\r\nimport {\r\n  MDBMask,\r\n  MDBView,\r\n} from \"mdbreact\";\r\n\r\nimport Navbar from '../components/navbar';\r\n\r\nexport default function Home(props) {\r\n \r\n\r\n  return (\r\n    <Navbar renderContent = {renderContent()}/>\r\n  );\r\n}\r\n\r\nfunction renderContent()\r\n{\r\n    return(\r\n        <MDBView src={homebg} style = {{justifyContent: 'center',  alignItems: 'center', width: '100%', height: '100%'}}>\r\n            <MDBMask className=\"flex-center\" >\r\n              <p className=\"white-text\" style={{fontSize: 50, paddingRight: '35%', paddingBottom: '8%'}}>make gifting easy</p>\r\n            </MDBMask>\r\n        </MDBView>\r\n    );\r\n}\r\n\r\n\r\n\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\components\\navbar.js",["50"],"import React, { useState } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\n\r\nfunction LoggedIn() {\r\n  if (localStorage.getItem(\"userToken\") === \"\") {\r\n    return (\r\n      <MDBNavbarNav right>\r\n        <MDBNavItem>\r\n          <MDBNavLink to=\"/login\" style={{ fontSize: \"1.4rem\" }}>\r\n            login\r\n          </MDBNavLink>\r\n        </MDBNavItem>\r\n        <MDBNavItem>\r\n          <MDBNavLink to=\"/signup\" style={{ fontSize: \"1.4rem\" }}>\r\n            sign up\r\n          </MDBNavLink>\r\n        </MDBNavItem>\r\n      </MDBNavbarNav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MDBNavbarNav left>\r\n        <MDBNavItem>\r\n          <MDBNavLink to=\"/wishlist\">wishlist</MDBNavLink>\r\n        </MDBNavItem>\r\n        <MDBNavItem>\r\n          <MDBNavLink to=\"/search\">search</MDBNavLink>\r\n        </MDBNavItem>\r\n      </MDBNavbarNav>\r\n      <MDBNavbarNav right>\r\n        <MDBNavItem>\r\n          <MDBBtn\r\n            size=\"sm\"\r\n            color=\"red\"\r\n            style={{}}\r\n            onClick={() => {\r\n              localStorage.setItem(\"userToken\", \"\");\r\n              window.location.reload();\r\n              console.log(localStorage.getItem(\"userToken\"));\r\n            }}\r\n          >\r\n            logout\r\n          </MDBBtn>\r\n        </MDBNavItem>\r\n      </MDBNavbarNav>\r\n    </>\r\n  );\r\n}\r\nexport default function Navbar(props) {\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [isWideEnough, setIsWideEnough] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <MDBNavbar\r\n          color=\"bg-primary\"\r\n          fixed=\"top\"\r\n          dark\r\n          expand=\"md\"\r\n          scrolling\r\n          transparent\r\n        >\r\n          <MDBNavbarBrand href=\"/\">\r\n            <strong>giftin'</strong>\r\n          </MDBNavbarBrand>\r\n          {!isWideEnough && (\r\n            <MDBNavbarToggler onClick={() => setCollapse(!collapse)} />\r\n          )}\r\n          <MDBCollapse isOpen={collapse} navbar>\r\n            <LoggedIn />\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n\r\n        {props.renderContent}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\login.js",["51","52","53"],"import React, { useState } from \"react\";\r\nimport homebg from \"../assets/iamge.jpg\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { FcLock } from \"react-icons/fc\";\r\nimport axios from \"axios\";\r\nimport { MDBView } from \"mdbreact\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const setData = (e) => {\r\n    e.preventDefault();\r\n    const user = { email: email, password: password };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/users/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"userToken\", res.data);\r\n        window.location = \"/\";\r\n      })\r\n      .catch((err) => {\r\n        setError(\"There was an error with your email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBView\r\n      src={homebg}\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ paddingTop: \"4rem\" }}>\r\n        <Form onSubmit={setData}>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs={{ span: 4, offset: 4 }}>\r\n                <FcLock size={23} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <label style={{ fontSize: \"2rem\", color: \"white\" }}>\r\n                  {\" \"}\r\n                  Login{\" \"}\r\n                </label>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group controlId=\"formGridEmail\">\r\n                  <Form.Label style={{ color: \"white\" }}>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={(text) => {\r\n                      setEmail(text.target.value);\r\n                      console.log(text.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label style={{ color: \"white\" }}>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(text) => {\r\n                      setPassword(text.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <small\r\n                  style={{\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  {error}{\" \"}\r\n                </small>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group id=\"formNoAccount\">\r\n                  <a href=\"http://localhost:3000/signup\">\r\n                    Don't have an account?\r\n                  </a>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Login\"\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n      </div>\r\n    </MDBView>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\signup.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\wishlist.js",["54","55","56","57","58","59","60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/navbar\";\r\nimport { MDBView, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport presentBg from \"../assets/present.jpg\";\r\nimport axios from \"axios\";\r\nimport { getAmazonPrice, getAmazonTitle, getHTML } from \"./scrape\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nlet parsedResponse = [];\r\nlet priceArray = [];\r\nlet titleArray = [];\r\nlet priceSet = [];\r\nlet titleSet = [];\r\n\r\n\r\nexport default function Wishlist() {\r\n  if (localStorage.getItem(\"userToken\") === \"\") {\r\n    window.location = \"/\";\r\n  }\r\n  return <Navbar renderContent={RenderContent()} />;\r\n}\r\n\r\nfunction RenderContent() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadData, setLoadData] = useState(true);\r\n  const [currentPrice, setCurrentPrice] = useState(\"\");\r\n  let currentId = localStorage.getItem(\"userToken\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${currentId}`)\r\n      .then((res) => {\r\n        parsedResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n        scrapePage();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  if (loading)\r\n    return (\r\n      <MDBView\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"vertical\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        src={presentBg}\r\n      >\r\n        <div>\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"7rem\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n<<<<<<< HEAD\r\n            <strong>your</strong> wishlist\r\n=======\r\n            <span><span style = {{fontWeight: 'bold'}}>your</span> wishlist</span>\r\n>>>>>>> 1e32c9c48019d3f8975da1025176c530169f8af4\r\n          </h1>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              paddingTop: \"4rem\",\r\n            }}\r\n          >\r\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n          </div>\r\n        </div>\r\n      </MDBView>\r\n    );\r\n\r\n  async function scrapePage() {\r\n    if (loading) {\r\n      console.log(parsedResponse);\r\n\r\n      if (parsedResponse.length === 0)\r\n        setLoading(false);\r\n      for (let i = 0; i < parsedResponse.length; i++) {\r\n        let html = await getHTML(parsedResponse[i]);\r\n        \r\n        await getAmazonPrice(html).then((res) => {\r\n          priceArray.push(res);\r\n        });\r\n\r\n        await getAmazonTitle(html).then((res) => {\r\n          titleArray.push(res);\r\n        });\r\n\r\n        if (parsedResponse[parsedResponse.length - 1] === parsedResponse[i])\r\n          setLoading(false);\r\n      }\r\n\r\n      console.log(priceArray);\r\n      priceSet = [...new Set(priceArray)];\r\n      titleSet = [...new Set(titleArray)];\r\n\r\n      priceArray = Array.from(priceSet);\r\n      titleArray = Array.from(titleSet);\r\n    }\r\n  }\r\n\r\n  if (parsedResponse.length !== 0)\r\n  return (\r\n    <MDBView\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"vertical\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      src={presentBg}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"7rem\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\" }}>\r\n            <strong>your </strong> wishlist\r\n          </h1>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <MDBTable borderless>\r\n            <MDBTableHead >\r\n              <tr style={{ color: \"white\", paddingLeft: '20%' }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n                <th></th>\r\n              </tr>\r\n            </MDBTableHead>\r\n\r\n            <MDBTableBody>\r\n              {parsedResponse.map((links, index) => {\r\n                console.log(\"PRICES: \" + priceArray);\r\n\r\n                return (\r\n                  <tr style={{ color: \"white\" }}>\r\n                    <th>{index + 1}</th>\r\n                    <th>\r\n                      <a\r\n                        style={{ color: \"white\" }}\r\n                        target=\"_blank\"\r\n                        href={links}\r\n                      >\r\n                        {titleArray[index]}\r\n                      </a>\r\n                    </th>\r\n                    <th>{priceArray[index]}</th>\r\n                    <th><div onClick = {() => {\r\n                      parsedResponse.pop(index);\r\n                      axios.post('http://localhost:5000/users/update/'+localStorage.getItem(\"userToken\"), {\"wishlist\": parsedResponse})\r\n                        .then(() => {window.location.reload()})\r\n                        .catch((err) => {console.log(err)})                     \r\n                    }}><i size = \"70%\" color = \"#D32F2F\" class=\"fas fa-trash\"></i></div></th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </div>\r\n    </MDBView>\r\n  );\r\n\r\n  return (\r\n    \r\n    <MDBView\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"vertical\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      src={presentBg}\r\n    >\r\n      {console.log(\"test\")}\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"7rem\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\" }}>\r\n            <strong>your</strong> wishlist\r\n          </h1>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <MDBTable borderless>\r\n            <MDBTableHead >\r\n              <tr style={{ color: \"white\", paddingLeft: '20%' }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n                <th></th>\r\n              </tr>\r\n            </MDBTableHead>\r\n          </MDBTable>\r\n        </div>\r\n        <div style = {{justifyContent: 'center', display:'flex', color: 'white'}}><h1>You don't have anything in your wishlist!</h1></div>\r\n        <div></div>\r\n      </div>\r\n    </MDBView>\r\n  )\r\n}\r\n\r\n\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\search.js",["62"],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\scrape.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":57,"column":26,"nodeType":"69","messageId":"70","endLine":57,"endColumn":41},{"ruleId":"67","severity":1,"message":"72","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":9},{"ruleId":"67","severity":1,"message":"73","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"74","line":22,"column":11,"nodeType":"69","messageId":"70","endLine":22,"endColumn":15},{"ruleId":"67","severity":1,"message":"75","line":25,"column":10,"nodeType":"69","messageId":"70","endLine":25,"endColumn":18},{"ruleId":"67","severity":1,"message":"76","line":25,"column":20,"nodeType":"69","messageId":"70","endLine":25,"endColumn":31},{"ruleId":"67","severity":1,"message":"77","line":26,"column":10,"nodeType":"69","messageId":"70","endLine":26,"endColumn":22},{"ruleId":"67","severity":1,"message":"78","line":26,"column":24,"nodeType":"69","messageId":"70","endLine":26,"endColumn":39},{"ruleId":"79","severity":1,"message":"80","line":39,"column":6,"nodeType":"81","endLine":39,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":86,"column":41,"nodeType":"85","messageId":"86","endLine":88,"endColumn":10},{"ruleId":"83","severity":1,"message":"87","line":90,"column":41,"nodeType":"85","messageId":"86","endLine":92,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":158,"column":25,"nodeType":"90","endLine":158,"endColumn":40},{"ruleId":null,"fatal":true,"severity":2,"message":"91","line":14,"column":2},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setIsWideEnough' is assigned a value but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'user' is assigned a value but never used.","'loadData' is assigned a value but never used.","'setLoadData' is assigned a value but never used.","'currentPrice' is assigned a value but never used.","'setCurrentPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentId' and 'scrapePage'. Either include them or remove the dependency array.","ArrayExpression",["94"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'priceArray'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'titleArray'.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 | \u001b[39m} from \u001b[32m\"mdbreact\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[36mimport\u001b[39m { getAmazonPrice\u001b[33m,\u001b[39m getAmazonTitle\u001b[33m,\u001b[39m getHTML } from \u001b[32m\"./scrape\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mLoader\u001b[39m from \u001b[32m\"react-loader-spinner\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>\u001b[39m \u001b[35m1e32\u001b[39mc9c48019d3f8975da1025176c530169f8af4\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [currentId, scrapePage]",{"range":"97","text":"98"},[1256,1258],"[currentId, scrapePage]"]