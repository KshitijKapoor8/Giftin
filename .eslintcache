[{"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\index.js":"1","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\App.js":"2","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\reportWebVitals.js":"3","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\home.js":"4","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\components\\navbar.js":"5","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\login.js":"6","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\signup.js":"7","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\wishlist.js":"8","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\search.js":"9","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\scrape.js":"10"},{"size":665,"mtime":1609201812595,"results":"11","hashOfConfig":"12"},{"size":755,"mtime":1609267153707,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1609179139903,"results":"14","hashOfConfig":"12"},{"size":1530,"mtime":1609298553095,"results":"15","hashOfConfig":"12"},{"size":2195,"mtime":1609297306797,"results":"16","hashOfConfig":"12"},{"size":3755,"mtime":1609281260061,"results":"17","hashOfConfig":"12"},{"size":6006,"mtime":1609281259874,"results":"18","hashOfConfig":"12"},{"size":9285,"mtime":1609285022234,"results":"19","hashOfConfig":"12"},{"size":7135,"mtime":1609286591673,"results":"20","hashOfConfig":"12"},{"size":1465,"mtime":1609281259874,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1f287i2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\index.js",[],["46","47"],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\App.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\reportWebVitals.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\home.js",["48","49"],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\components\\navbar.js",["50"],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\login.js",["51","52","53"],"import React, { useState } from \"react\";\r\nimport homebg from \"../assets/iamge.jpg\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { FcLock } from \"react-icons/fc\";\r\nimport axios from \"axios\";\r\nimport { MDBView } from \"mdbreact\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const setData = (e) => {\r\n    e.preventDefault();\r\n    const user = { email: email, password: password };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/users/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"userToken\", res.data);\r\n        window.location = \"/\";\r\n      })\r\n      .catch((err) => {\r\n        setError(\"There was an error with your email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBView\r\n      src={homebg}\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ paddingTop: \"4rem\" }}>\r\n        <Form onSubmit={setData}>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs={{ span: 4, offset: 4 }}>\r\n                <FcLock size={23} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <label style={{ fontSize: \"2rem\", color: \"white\" }}>\r\n                  {\" \"}\r\n                  Login{\" \"}\r\n                </label>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group controlId=\"formGridEmail\">\r\n                  <Form.Label style={{ color: \"white\" }}>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={(text) => {\r\n                      setEmail(text.target.value);\r\n                      console.log(text.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label style={{ color: \"white\" }}>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(text) => {\r\n                      setPassword(text.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <small\r\n                  style={{\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  {error}{\" \"}\r\n                </small>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <Form.Group id=\"formNoAccount\">\r\n                  <a href=\"http://localhost:3000/signup\">\r\n                    Don't have an account?\r\n                  </a>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col sm={{ span: 4, offset: 4 }}>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Login\"\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Form>\r\n      </div>\r\n    </MDBView>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\signup.js",[],"D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\wishlist.js",["54","55","56","57","58","59","60","61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/navbar\";\r\nimport { MDBView, MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBInput } from \"mdbreact\";\r\nimport presentBg from \"../assets/present.jpg\";\r\nimport axios from \"axios\";\r\nimport { getAmazonPrice, getAmazonTitle, getHTML } from \"./scrape\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nlet parsedResponse = [];\r\nlet priceArray = [];\r\nlet titleArray = [];\r\nlet priceSet = [];\r\nlet titleSet = [];\r\n\r\n\r\nexport default function Wishlist() {\r\n  if (localStorage.getItem(\"userToken\") === \"\") {\r\n    window.location = \"/\";\r\n  }\r\n  return <Navbar renderContent={RenderContent()} />;\r\n}\r\n\r\nfunction RenderContent() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadData, setLoadData] = useState(true);\r\n  const [currentPrice, setCurrentPrice] = useState(\"\");\r\n  const [modal, setModal] = useState(false);\r\n  const [add, setAdd] = useState(\"\");\r\n\r\n  let currentId = localStorage.getItem(\"userToken\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/users/${currentId}`)\r\n      .then((res) => {\r\n        parsedResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n        scrapePage();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  if (loading)\r\n    return (\r\n      <MDBView\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"vertical\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        src={presentBg}\r\n      >\r\n        <div>\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"7rem\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <span><span style = {{fontWeight: 'bold'}}>your</span> wishlist</span>\r\n          </h1>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              paddingTop: \"4rem\",\r\n            }}\r\n          >\r\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n          </div>\r\n        </div>\r\n      </MDBView>\r\n    );\r\n\r\n  async function scrapePage() {\r\n    if (loading) {\r\n      console.log(parsedResponse);\r\n\r\n      if (parsedResponse.length === 0)\r\n        setLoading(false);\r\n      for (let i = 0; i < parsedResponse.length; i++) {\r\n        let html = await getHTML(parsedResponse[i]);\r\n        \r\n        await getAmazonPrice(html).then((res) => {\r\n          priceArray.push(res);\r\n        });\r\n\r\n        await getAmazonTitle(html).then((res) => {\r\n          titleArray.push(res);\r\n        });\r\n\r\n        if (parsedResponse[parsedResponse.length - 1] === parsedResponse[i])\r\n          setLoading(false);\r\n      }\r\n\r\n      console.log(priceArray);\r\n      priceSet = [...new Set(priceArray)];\r\n      titleSet = [...new Set(titleArray)];\r\n\r\n      priceArray = Array.from(priceSet);\r\n      titleArray = Array.from(titleSet);\r\n    }\r\n  }\r\n\r\n  if (parsedResponse.length !== 0)\r\n  return (\r\n    <MDBView\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"vertical\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      src={presentBg}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"7rem\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\" }}>\r\n            <strong>your </strong> wishlist\r\n          </h1>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <MDBTable borderless>\r\n            <MDBTableHead >\r\n              <tr style={{ color: \"white\", paddingLeft: '20%' }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n                <th></th>\r\n              </tr>\r\n            </MDBTableHead>\r\n\r\n            <MDBTableBody>\r\n              {parsedResponse.map((links, index) => {\r\n                console.log(\"PRICES: \" + priceArray);\r\n\r\n                return (\r\n                  <tr style={{ color: \"white\" }}>\r\n                    <th>{index + 1}</th>\r\n                    <th>\r\n                      <a\r\n                        style={{ color: \"white\" }}\r\n                        target=\"_blank\"\r\n                        href={links}\r\n                      >\r\n                        {titleArray[index]}\r\n                      </a>\r\n                    </th>\r\n                    <th>{priceArray[index]}</th>\r\n                    <th><div onClick = {() => {\r\n                      const indexx = parsedResponse.indexOf(parsedResponse[index]);\r\n                      if (indexx > -1) {\r\n                        parsedResponse.splice(indexx, 1);\r\n                      }\r\n                      axios.post('http://localhost:5000/users/update/'+localStorage.getItem(\"userToken\"), {\"wishlist\": parsedResponse})\r\n                        .then(() => {window.location.reload()})\r\n                        .catch((err) => {console.log(err)})                     \r\n                    }}><i size = \"70%\" color = \"#D32F2F\" class=\"fas fa-trash\"></i></div></th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n        <div style = {{justifyContent: 'center', display: 'flex'}}><MDBBtn onClick = {() => {\r\n          setModal(!modal)\r\n        }}style = {{fontSize: 20}} size = \"sm\" gradient = \"blue\" width = {30}>+</MDBBtn></div>\r\n      </div>\r\n      <MDBModal isOpen={modal}>\r\n            <MDBModalHeader>{\"Add to your wishlist:\"}</MDBModalHeader>\r\n              <div style= {{justifyContent: 'center', display: 'flex', paddingRight: '19%'}}><MDBInput onChange = {(text) => {setAdd(text.target.value)}} style = {{width: '150%',  display: 'flex', justifyContent: 'center',}} label=\"Enter Amazon Link\" /></div>\r\n            <MDBModalFooter>\r\n            <MDBBtn size = \"sm\" gradient=\"blue\" onClick={() => {\r\n              parsedResponse.push(add);\r\n              axios.post(`http://localhost:5000/users/update/${currentId}`, {\"wishlist\": parsedResponse})\r\n              .then(() => {window.location.reload()})\r\n              .catch(() => {})\r\n            }}>\r\n                Add\r\n              </MDBBtn>\r\n             <MDBBtn size = \"sm\" gradient=\"purple\" onClick={() => {setModal(!modal)}}>\r\n                Cancel\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n    </MDBView>\r\n  );\r\n\r\n  return (\r\n    \r\n    <MDBView\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"vertical\",\r\n        justifyContent: \"center\",\r\n      }}\r\n      src={presentBg}\r\n    >\r\n      {console.log(\"test\")}\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"7rem\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\" }}>\r\n            <strong>your</strong> wishlist\r\n          </h1>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <MDBTable borderless>\r\n            <MDBTableHead >\r\n              <tr style={{ color: \"white\", paddingLeft: '20%' }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n                <th></th>\r\n              </tr>\r\n            </MDBTableHead>\r\n          </MDBTable>\r\n        </div>\r\n        <div style = {{justifyContent: 'center', display:'flex', color: 'white'}}><h1>You don't have anything in your wishlist!</h1></div>\r\n        <div style = {{justifyContent: 'center', display: 'flex'}}><MDBBtn onClick = {() => {\r\n          setModal(!modal)\r\n        }}style = {{fontSize: 20}} size = \"sm\" gradient = \"blue\" width = {30}>+</MDBBtn></div>\r\n      </div>\r\n      <MDBModal isOpen={modal}>\r\n            <MDBModalHeader>{\"Add to your wishlist:\"}</MDBModalHeader>\r\n              <div style= {{justifyContent: 'center', display: 'flex', paddingRight: '19%'}}><MDBInput onChange = {(text) => {setAdd(text.target.value)}} style = {{width: '150%',  display: 'flex', justifyContent: 'center',}} label=\"Enter Amazon Link\" /></div>\r\n            <MDBModalFooter>\r\n            <MDBBtn size = \"sm\" gradient=\"blue\" onClick={() => {\r\n              parsedResponse.push(add);\r\n              axios.post(`http://localhost:5000/users/update/${currentId}`, {\"wishlist\": parsedResponse})\r\n              .then(() => {window.location.reload()})\r\n              .catch(() => {})\r\n            }}>\r\n                Add\r\n              </MDBBtn>\r\n             <MDBBtn size = \"sm\" gradient=\"purple\" onClick={() => {setModal(!modal)}}>\r\n                Cancel\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n    </MDBView>\r\n  )\r\n}\r\n\r\n\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\search.js",["63","64","65","66","67","68","69","70","71","72","73"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MDBInput,\r\n  MDBContainer,\r\n  MDBView,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBTable,\r\n} from \"mdbreact\";\r\nimport Navbar from \"../components/navbar\";\r\nimport homebg from \"../assets/loginbg.jpg\";\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { getAmazonPrice, getAmazonTitle, getHTML } from \"./scrape\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { load } from \"cheerio\";\r\n\r\nlet wishlistResponse = [];\r\nlet list = [];\r\nlet display = [];\r\nlet uniq = [];\r\nlet parsedResponse = [];\r\nlet priceArray = [];\r\nlet titleArray = [];\r\nlet priceSet = [];\r\nlet titleSet = [];\r\n\r\nvar name;\r\n\r\nvar id;\r\n\r\nvar name;\r\n\r\nvar id;\r\n\r\nfunction Nav() {\r\n  if (localStorage.getItem(\"userToken\") === \"\") {\r\n    window.location = \"/\";\r\n  }\r\n  return <Navbar renderContent={Search()} />;\r\n}\r\n\r\nconst Search = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/users/\", {})\r\n      .then((res) => {\r\n        parsedResponse = JSON.parse(JSON.stringify(res.data));\r\n        parsedResponse\r\n          .slice(0)\r\n          .reverse()\r\n          .map((parsedResponse) => {\r\n            list.push(parsedResponse.username);\r\n          });\r\n        setFiltered(list);\r\n      })\r\n      .catch((err) => {});\r\n\r\n    axios\r\n      .get(`http://localhost:5000/users/${id}`)\r\n      .then((res) => {\r\n        wishlistResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n        scrapePage();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  async function scrapePage() {\r\n    if (loading) {\r\n      for (let i = 0; i < wishlistResponse.length; i++) {\r\n        let html = await getHTML(wishlistResponse[i]);\r\n        console.log(wishlistResponse[i]);\r\n\r\n        await getAmazonPrice(html).then((res) => {\r\n          priceArray.push(res);\r\n          console.log(res);\r\n        });\r\n\r\n        await getAmazonTitle(html).then((res) => {\r\n          titleArray.push(res);\r\n          console.log(titleArray);\r\n        });\r\n\r\n        if (\r\n          wishlistResponse[wishlistResponse.length - 1] === wishlistResponse[i]\r\n        )\r\n          setLoading(false);\r\n      }\r\n\r\n      if (loading === true) {\r\n        setLoading(false);\r\n\r\n        priceSet = [...new Set(priceArray)];\r\n        titleSet = [...new Set(titleArray)];\r\n\r\n        priceArray = Array.from(priceSet);\r\n        titleArray = Array.from(titleSet);\r\n      }\r\n      console.log(priceArray);\r\n    }\r\n  }\r\n\r\n  const findUser = (e) => {\r\n    name = e.target.id;\r\n\r\n    for (var i = 0; i < parsedResponse.length; i++) {\r\n      if (parsedResponse[i].username == name) {\r\n        id = parsedResponse[i]._id;\r\n      }\r\n    }\r\n\r\n    axios\r\n      .get(`http://localhost:5000/users/${id}`)\r\n      .then((res) => {\r\n        wishlistResponse = JSON.parse(JSON.stringify(res.data.wishlist));\r\n        console.log(wishlistResponse);\r\n        scrapePage();\r\n      })\r\n      .catch((err) => {});\r\n\r\n    setModal(true);\r\n  };\r\n  function toggle() {\r\n    setModal(false);\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const searchData = (e) => {\r\n    let currentList = [];\r\n    let newList = [];\r\n\r\n    if (e.target.value !== \"\") {\r\n      currentList = list;\r\n\r\n      newList = currentList.filter((item) => {\r\n        const lc = item;\r\n\r\n        const filter = e.target.value;\r\n\r\n        if (lc.startsWith(filter)) {\r\n          display.push(lc);\r\n          display.push(\" \");\r\n          uniq = [...new Set(display)];\r\n        }\r\n      });\r\n    } else {\r\n      newList = list;\r\n      display = [];\r\n      uniq = [];\r\n    }\r\n\r\n    setFiltered(newList);\r\n  };\r\n\r\n  function LoadingBody() {\r\n    if (loading) {\r\n      return (\r\n        <MDBModalBody>\r\n          {\" \"}\r\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />{\" \"}\r\n        </MDBModalBody>\r\n      );\r\n    } else if(wishlistResponse.length === 0) {\r\n      return (\r\n        <MDBModalBody>\r\n          <div>There are no items in this Wishlist</div>\r\n        </MDBModalBody>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <MDBModalBody>\r\n          <MDBTable borderless>\r\n            <MDBTableHead>\r\n              <tr style={{ color: \"black\" }}>\r\n                <th>#</th>\r\n                <th>title</th>\r\n                <th>price</th>\r\n                <th></th>\r\n              </tr>\r\n            </MDBTableHead>\r\n\r\n            <MDBTableBody>\r\n              {wishlistResponse.map((links, index) => {\r\n                console.log(index);\r\n                return (\r\n                  <tr style={{ color: \"black\" }}>\r\n                    <th>{index + 1}</th>\r\n                    <th>\r\n                      <a\r\n                        style={{ color: \"black\" }}\r\n                        target=\"_blank\"\r\n                        href={links}\r\n                      >\r\n                        {titleArray[index]}\r\n                      </a>\r\n                    </th>\r\n                    <th>{priceArray[index]}</th>\r\n                    <th><MDBBtn size=\"sm\" gradient=\"aqua\" onClick={() => {\r\n                      const indexx = wishlistResponse.indexOf(wishlistResponse[index]);\r\n                      if (indexx > -1) {\r\n                        wishlistResponse.splice(indexx, 1);\r\n                      }\r\n                      console.log(wishlistResponse)\r\n                      axios.post('http://localhost:5000/users/update/'+id, {\"wishlist\": wishlistResponse})\r\n                        .then(() => {window.location.reload()})\r\n                        .catch((err) => {console.log(err)})\r\n\r\n                        }}>Buy</MDBBtn></th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </MDBModalBody>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MDBView src={homebg}>\r\n      <MDBContainer>\r\n        <div style={{ paddingTop: \"5rem\" }}>\r\n          <MDBInput\r\n            label=\"Search!\"\r\n            onChange={searchData}\r\n            size=\"lg\"\r\n            icon=\"search\"\r\n            style={{ color: \"white\" }}\r\n          />\r\n          <div>\r\n            {uniq.map((item) => {\r\n              return (\r\n                <ul\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: \"2rem\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={findUser}\r\n                  id={item}\r\n                >\r\n                  {item}\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n          <MDBModal isOpen={modal}>\r\n            <MDBModalHeader>{name + \"'s Wishlist\"}</MDBModalHeader>\r\n            <LoadingBody />\r\n            <MDBModalFooter>\r\n              <MDBBtn color=\"secondary\" onClick={toggle}>\r\n                Close\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n        </div>\r\n      </MDBContainer>\r\n    </MDBView>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\Users\\samru\\Documents\\Hackathon Projects\\Giftin\\src\\pages\\scrape.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":64,"column":24,"nodeType":"80","messageId":"81","endLine":64,"endColumn":39},{"ruleId":"78","severity":1,"message":"84","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":9},{"ruleId":"78","severity":1,"message":"85","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":22,"column":11,"nodeType":"80","messageId":"81","endLine":22,"endColumn":15},{"ruleId":"78","severity":1,"message":"87","line":3,"column":91,"nodeType":"80","messageId":"81","endLine":3,"endColumn":103},{"ruleId":"78","severity":1,"message":"88","line":26,"column":10,"nodeType":"80","messageId":"81","endLine":26,"endColumn":18},{"ruleId":"78","severity":1,"message":"89","line":26,"column":20,"nodeType":"80","messageId":"81","endLine":26,"endColumn":31},{"ruleId":"78","severity":1,"message":"90","line":27,"column":10,"nodeType":"80","messageId":"81","endLine":27,"endColumn":22},{"ruleId":"78","severity":1,"message":"91","line":27,"column":24,"nodeType":"80","messageId":"81","endLine":27,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":43,"column":6,"nodeType":"94","endLine":43,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":92,"column":41,"nodeType":"98","messageId":"99","endLine":94,"endColumn":10},{"ruleId":"96","severity":1,"message":"100","line":96,"column":41,"nodeType":"98","messageId":"99","endLine":98,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":166,"column":25,"nodeType":"103","endLine":166,"endColumn":40},{"ruleId":"78","severity":1,"message":"104","line":22,"column":10,"nodeType":"80","messageId":"81","endLine":22,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":38,"column":5,"nodeType":"80","messageId":"107","endLine":38,"endColumn":9},{"ruleId":"105","severity":1,"message":"108","line":40,"column":5,"nodeType":"80","messageId":"107","endLine":40,"endColumn":7},{"ruleId":"78","severity":1,"message":"109","line":51,"column":10,"nodeType":"80","messageId":"81","endLine":51,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":61,"column":33,"nodeType":"98","messageId":"112","endLine":61,"endColumn":35},{"ruleId":"92","severity":1,"message":"113","line":77,"column":6,"nodeType":"94","endLine":77,"endColumn":8,"suggestions":"114"},{"ruleId":"96","severity":1,"message":"97","line":85,"column":41,"nodeType":"98","messageId":"99","endLine":88,"endColumn":10},{"ruleId":"96","severity":1,"message":"115","line":90,"column":41,"nodeType":"98","messageId":"99","endLine":93,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":118,"column":38,"nodeType":"118","messageId":"119","endLine":118,"endColumn":40},{"ruleId":"110","severity":1,"message":"120","line":146,"column":43,"nodeType":"98","messageId":"112","endLine":146,"endColumn":45},{"ruleId":"101","severity":1,"message":"102","line":203,"column":25,"nodeType":"103","endLine":203,"endColumn":40},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'MDBContainer' is defined but never used.","'setIsWideEnough' is assigned a value but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'user' is assigned a value but never used.","'MDBModalBody' is defined but never used.","'loadData' is assigned a value but never used.","'setLoadData' is assigned a value but never used.","'currentPrice' is assigned a value but never used.","'setCurrentPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentId' and 'scrapePage'. Either include them or remove the dependency array.","ArrayExpression",["123"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'priceArray'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'titleArray'.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'load' is defined but never used.","no-redeclare","'name' is already defined.","redeclared","'id' is already defined.","'filtered' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'scrapePage'. Either include it or remove the dependency array.",["124"],"Function declared in a loop contains unsafe references to variable(s) 'titleArray', 'titleArray'.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a return value from arrow function.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [currentId, scrapePage]",{"range":"129","text":"130"},"Update the dependencies array to be: [scrapePage]",{"range":"131","text":"132"},[1419,1421],"[currentId, scrapePage]",[1772,1774],"[scrapePage]"]